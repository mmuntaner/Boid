//****************************************************************************
//
//
//
//****************************************************************************



#ifndef __ENVIRONNEMENT_H__
#define __ENVIRONNEMENT_H__


// ===========================================================================
//                                  Libraries
// ===========================================================================
#include <cstdio>
#include <cstdlib>
#include "agent.h"
#include "proie.h"
#include "obstacle.h"



// ===========================================================================
//                                Project Files
// ===========================================================================




// ===========================================================================
//                              Class declarations
// ===========================================================================






class environnement
{
  public :
    
    // =======================================================================
    //                                 Enums
    // =======================================================================
    
    // =======================================================================
    //                               Constructors
    // =======================================================================
    environnement(void);
    environnement(int n);
    environnement(int p, int o);

    // =======================================================================
    //                                Destructor
    // =======================================================================
    virtual ~environnement(void);

    // =======================================================================
    //                            Accessors: getters
    // =======================================================================
    inline proie* Get_TabProie(void) const;
    inline int Get_nbProie(void) const;
    inline obstacle* Get_TabObstacle(void) const;
    inline int Get_nbObstacle(void) const;
    

    void vitfinal(void);
    void posfinal(void);

    // =======================================================================
    //                            Accessors: setters
    // =======================================================================
   
   
    // =======================================================================
    //                                Operators
    // =======================================================================

    // =======================================================================
    //                              Public Methods
    // =======================================================================
    void MouvProie(void);
    // =======================================================================
    //                             Public Attributes
    // =======================================================================





  protected :

    // =======================================================================
    //                            Forbidden Constructors
    // =======================================================================
    /*environnement(void)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };

    environnement(const Template_class &model)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
      }; */


    // =======================================================================
    //                              Protected Methods
    // =======================================================================

    // =======================================================================
    //                             Protected Attributes
    // =======================================================================
      const int W = 640;
      const int H = 480;
      const float dt=0.3;

      float G1 = 0.25;
      float G2 = 0.002;
      float G3 = 0.5;

      int nbProie;
      proie* TabProie;

      int nbObstacle;
      obstacle* TabObstacle;
  
};


// ===========================================================================
//                              Getters' definitions
// ===========================================================================
inline proie* environnement::Get_TabProie(void) const
{
  return TabProie;
}

 inline int environnement::Get_nbProie(void) const
 {
  return nbProie;
 }

 inline obstacle* environnement::Get_TabObstacle(void) const
{
  return TabObstacle;
}

 inline int environnement::Get_nbObstacle(void) const
 {
  return nbObstacle;
 }


// ===========================================================================
//                              Setters' definitions
// ===========================================================================

// ===========================================================================
//                             Operators' definitions
// ===========================================================================

// ===========================================================================
//                          Inline functions' definition
// ===========================================================================


#endif // __ENVIRONNEMENT_H__

